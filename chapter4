# 離散選択モデル：質的データの分析
# 二値選択のモデル：プロビット、ロジット・モデル
# 質的変数を被説明変数にすることの問題点
# ロジット、プロビット・モデルの考え方

# Rによるロジット、プロビット・モデルの推定方法
data(mroz, package='wooldridge')

# プロビット、ロジットの推計は、glm関数
# model_logit <-glm(y~x1+x2+x3,family=binomial(link="logit"),data= データフレーム名)

# プロビット・モデルの場合は、"logit"を"probitに変更する
library(DescTools)
DescTools::PseudoR2(model_probit)

# 最小二乗法による推定結果と予測値
result0 <- lm(inlf~age+educ+kidslt6+kidsge6,data=mroz)
summary(resultO)

# 予測値の計算
# dplyr::mutate(), predict(), summary()
mroz <- mroz %>% mutate(y_hat=predict(result0))
summary(mroz$y_hat)

# ロジット、プロビットモデルの推定結果と予測値
result1 <- glm(inlf~age+educ+kidslt6+kidsge6,family=binomial(link=logit),data=mroz)
summary(result1)
# ロジット・モデルの結果result1から予測確率を計算
mroz <- mroz %>% dplyr::mutate(prop_resl=predict(result1,type="response"))
summary(mroz$prob_resl)

# 疑似決定係数の出力（モデルの説明力については、通常の決定係数ではなく、疑似決定係数に注目）
DescTools::PseudoR2(result1)

# 限界効果の計算
# logitmfx(y~X1+x2+x3,data= オブジェクト名)
# probitmfx(y~X1+x2+x3,data= オブジェクト名)
# ロジット・モデルの限界効果
resl_mfx <- logitmfx(fdi ~ slsprofit + wage + labor, data=mroz)

# プロビット・モデルの推定結果
result2 <- glm(inlf~age+educ+kidslt6+kidsge6,family=binomial(probit),data=mroz)
summary(result2)

# プロビット・モデルの係数を1.6倍するとロジット・モデルの係数とほぼ等しくなる
DescTools::PseudoR2(result2)

# プロビット・モデルの限界効果
res2_mfx <- probitmfx(inlf~age+educ+kidslt6+kidsge6,data=mroz)
# ロジット・モデルとプロビット・モデルは、ほぼ同じ結果を出力している

# 結果表の出力、および頑健な標準誤差の出力
# 推定結果を表にまとめて出力する際はmsummary
reg <- 
  list(
    "model1" <- glm(inlf~age+educ+kidslt6+kidsge6,family=binomial(link=logit), data=mroz),
    "model2" <- glm(inlf~age+educ+kidslt6+kidsge6,family=binomial(probit), data=mroz),
msummary(regs, stars=TRUE, gof_omit = 'AIC|BIC|Log.Lik.|F',vcov="HC1")

# EXCELに出力したいときは最後のmsummaryの行をいかに差し替えて
res_table <- modelsummary::msummary(regs, stars=TRUE, 
             gof_omit = 'AIC|BIC|Log.Lik.|F',vcov="HC1",output="mrozrame")
openexcel::write.xlsx(res_table,"result.xlsx")

# 打ち切りデータ分析：トービット・モデル
# トービット・モデルとは
# Rによるトービット・モデルの推定
summary(mroz$hours)

# dplyr::filter()関数で就業している(inlf==1)に限定した上でsummarize()で平均値を計算
# 就業女性に限定して労働時間hoursの平均値を計算
mroz %>% dplyr::filter(inlf==1) %>% summarize(m_hours=mean(hours))

# トービット・モデルの推定にはcensReg()関数が便利
# censReg(y~x1+x2+x3, left=打ち切り点, data=データフレーム名)
library(censReg)
res_tobit1 <- censReg::censReg(hours~age+educ+kidslt6+kidsge6,left=0, data=mroz)
summary(res_tobit1)

# margEff()関数を使って限界効果を計算
summary(margEff(res_tobit1))

# 最小二乗法による推定結果
result_ols <- lm(hours~age+educ+kidslt6+kidsge6,data=mroz)
summary(result_ols)

# その他の離散選択モデル
